% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eml.R
\name{eml_set_reference}
\alias{eml_set_reference}
\title{Set a reference to an EML object}
\usage{
eml_set_reference(element_to_reference, element_to_replace)
}
\arguments{
\item{element_to_reference}{(S4) An EML object to reference}

\item{element_to_replace}{(S4) An EML object to replace with a reference}
}
\description{
This function creates a new object with the same class as \code{element_to_replace}
using a reference to \code{element_to_reference}
}
\examples{
\dontrun{

cn <- dataone::CNode('PROD')
adc <- dataone::getMNode(cn,'urn:node:ARCTIC')
eml <- EML::read_eml(dataone::getObject(adc, 'doi:10.18739/A2S17SS1M'))

# Set the first contact as a reference to the first creator
eml@dataset@contact[[1]] <- eml_set_reference(eml@dataset@creator[[1]],
eml@dataset@contact[[1]])

# This is also useful when we want to set references to a subset of 'dataTable' or 'otherEntity' objects
# Add a few more objects to illustrate the use
eml@dataset@dataTable[[3]] <- eml@dataset@dataTable[[1]]
eml@dataset@dataTable[[4]] <- eml@dataset@dataTable[[1]]
# Add references to the second and third elements
for (i in 2:3) {
    eml@dataset@dataTable[[i]] <- eml_set_reference(eml@dataset@dataTable[[1]],
                                                      eml@dataset@dataTable[[1]])
}
# If we print the entire 'dataTable' list we see elements 2 and 3 have references while 4 does not.
eml@dataset@dataTable
}
}
\author{
Dominic Mullen dmullen17@gmail.com
}
