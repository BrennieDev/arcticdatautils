% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{view_profile}
\alias{view_profile}
\title{Get an approximate list of the datasets in a user's profile}
\usage{
view_profile(mn, subject, fields = c("identifier", "title"))
}
\arguments{
\item{mn}{(MNode) The Member Node to query.}

\item{subject}{(character) The subject to find the datasets for. This is
likely going to be your ORCID, e.g. http://orcid.org....}

\item{fields}{(character) A vector of Solr fields to return.}
}
\value{
(data.frame) data.frame with the results.
}
\description{
This function is intended to be (poorly) simulate what a user sees when they
browse to their "My Data Sets" page (their #profile URL). It uses a similar
Solr to what Metacat UI uses to generate the list. The results of this
function may be the same as what's on the #profile page but may be missing
some of the user's datasets when:
}
\details{
- The user has any datasets in their #profile that the person running the
query (you) can't \code{read}. This is rare on arcticdata.io but possible
because arctic-data-admins usually has read/write/changePermission
permissions on every object.
- The user has datasets owned by an Equivalent Identity of the \code{subject}
being queried. This is rare, especially on arcticdata.io.
}
\examples{
\dontrun{
options(...set...your...token....)
mn <- env_load('production')$mn
me <- get_token_subject()
profile(mn, me)

// Get a custom set of fields
view_profile(mn, me, "origin")

# Set environment
cn <- CNode("STAGING2")
mn <- getMNode(cn,"urn:node:mnTestKNB")

package_df <- view_profile(mn, "http://orcid.org/0000-0003-4703-1974", fields = c("title"))

}
}
